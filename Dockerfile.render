FROM composer:2 AS composer

FROM php:8.2-fpm AS runtime

# Install system dependencies (nginx, supervisor, gettext for envsubst, postgres libs)
RUN apt-get update \
     && apt-get install -y --no-install-recommends \
         git unzip zip libpq-dev curl nginx supervisor gettext-base libicu-dev \
     && docker-php-ext-install pdo pdo_pgsql intl \
    && rm -rf /var/lib/apt/lists/*

# Copy composer binary
COPY --from=composer /usr/bin/composer /usr/bin/composer

WORKDIR /var/www/app

# Allow composer plugins when running as root, set prod env early for scripts
ENV COMPOSER_ALLOW_SUPERUSER=1 \
    APP_ENV=prod

# Allow build layer caching of vendor
COPY composer.json composer.lock symfony.lock ./
# Provide a minimal .env file so Dotenv doesn't fail if relying on file presence; values overridden by real env vars
RUN printf "APP_ENV=prod\nMESSENGER_TRANSPORT_DSN=doctrine://default?auto_setup=0\n" > .env
# First install dependencies without running scripts (bin/console not copied yet)
RUN composer install --no-dev --prefer-dist --optimize-autoloader --no-interaction --no-progress --no-scripts \
    && mkdir -p var/cache var/log \
    && chown -R www-data:www-data var

# Copy the rest of the application source
COPY . .

# (Optional) Skipped build-time cache clear to avoid needing DATABASE_URL during build; runtime will warm the cache.
# You can re-enable later with a placeholder DATABASE_URL if desired.

# Nginx & Supervisor configuration
COPY docker/prod/nginx.conf.template /etc/nginx/conf.d/default.conf.template
COPY docker/prod/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

ENV PORT=8080 \
    PHP_OPCACHE_VALIDATE_TIMESTAMPS=0 \
    COMPOSER_ALLOW_SUPERUSER=1

EXPOSE 8080

HEALTHCHECK --interval=30s --timeout=5s --retries=3 CMD curl -fsS http://localhost:${PORT}/healthz.php || exit 1

CMD ["/entrypoint.sh"]
